apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cf-yaci-devkit.fullname" . }}
  labels:
    {{- include "cf-yaci-devkit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cf-yaci-devkit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cf-yaci-devkit.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cf-yaci-devkit.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: blockfrost 
              containerPort: {{ .Values.service.blockfrostPort }}
              protocol: TCP
            - name: node
              containerPort: {{ .Values.service.cardanoNodePort }}
              protocol: TCP
          env:
            - name: yaci_store_enabled
              value: "true"
            - name: ogmios_enabled
              value: "true"
            - name: kupo_enabled
              value: "false"
            - name: node
              value: "node1"
            - name: yaci_cli_mode
              value: "native"
            - name: yaci_store_mode
              value: "native"
            - name: topup_addresses
              value: {{ .Values.yaci.topupAddresses | quote }}
            - name: HOST_N2N_PORT
              value: {{ .Values.yaci.ports.n2n | quote }}
            - name: HOST_N2C_SOCAT_PORT
              value: {{ .Values.yaci.ports.n2cSocat | quote }}
            - name: HOST_STORE_API_PORT
              value: {{ .Values.yaci.ports.storeApi | quote }}
            - name: HOST_VIEWER_PORT
              value: {{ .Values.yaci.ports.viewer | quote }}
            - name: HOST_CLUSTER_API_PORT
              value: {{ .Values.yaci.ports.clusterApi | quote }}
            - name: HOST_SUBMIT_API_PORT
              value: {{ .Values.yaci.ports.submitApi | quote }}
            - name: HOST_OGMIOS_PORT
              value: {{ .Values.yaci.ports.ogmios | quote }}
            - name: HOST_KUPO_PORT
              value: {{ .Values.yaci.ports.kupo | quote }}
          command:
             - "/app/yaci-cli"
             - "create-node"
             - "-o"
             - "--start"
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
             - name: node-properties
               mountPath: /app/config/node.properties
               subPath: node.properties
             - name: node-data
               mountPath: /clusters
           {{- with .Values.volumeMounts }}
             {{- toYaml . | nindent 12 }}
           {{- end }}
      volumes:
        - name: node-properties
          configMap:
            name: {{ include "cf-yaci-devkit.fullname" . }}-node
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: node-data
      spec:
        accessModes: [ "{{ .Values.persistence.accessMode }}" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
